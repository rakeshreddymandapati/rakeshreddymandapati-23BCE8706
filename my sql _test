CREATE DATABASE ORG123;
SHOW DATABASES;
USE ORG123;

CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);

INSERT INTO Worker 
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
		(001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),
		(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'),
		(003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),
		(004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
		(005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
		(006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
		(007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account'),
		(008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');

CREATE TABLE Bonus (
	WORKER_REF_ID INT,
	BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Bonus 
	(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
		(001, 5000, '16-02-20'),
		(002, 3000, '16-06-11'),
		(003, 4000, '16-02-20'),
		(001, 4500, '16-02-20'),
		(002, 3500, '16-06-11');
CREATE TABLE Title (
	WORKER_REF_ID INT,
	WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Title 
	(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
 (001, 'Manager', '2016-02-20 00:00:00'),
 (002, 'Executive', '2016-06-11 00:00:00'),
 (008, 'Executive', '2016-06-11 00:00:00'),
 (005, 'Manager', '2016-06-11 00:00:00'),
 (004, 'Asst. Manager', '2016-06-11 00:00:00'),
 (007, 'Executive', '2016-06-11 00:00:00'),
 (006, 'Lead', '2016-06-11 00:00:00'),
 (003, 'Lead', '2016-06-11 00:00:00');
 
 #1. Write an SQL query to fetch unique values of DEPARTMENT from Worker table.
 
 select distinct(department) from worker;
 
 #2. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending and DEPARTMENT Descending
 
select * from worker ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;

# 3. Write an SQL query to print details of the Workers whose FIRST_NAME contains ‘a’

select * from worker where FIRST_NAME like'%a%';

#4. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains six alphabets

select *from Worker where FIRST_NAME like '_____h';

#5. Write an SQL query to print details of the Workers whose SALARY lies between 100000 and 500000

select * from worker where salary between 100000 and 500000;

#6. Write an SQL query to print details of the Workers who have joined in Feb’2014.

select * from worker where joining_date like '2014-02-%';

#7. Write an SQL query to fetch the count of employees working in the department ‘Admin’

select count(department) from worker where department='admin';

#8. Write an SQL query to fetch worker names with salaries >= 50000 and <= 100000.

select FIRST_NAME, last_name, salary from worker where salary between 50000 and 100000;

#9. Write an SQL query to fetch the no. of workers for each department in the descending order

select department,count(*) as num_workers from worker 
group by department order by num_workers desc;

#10. Write an SQL query to print details of the Workers who are also Managers

select worker.* from worker worker join title on worker.worker_id=title.worker_ref_id where title.worker_title = 'manager' ;

#11. Write an SQL query to determine the 2nd lowest salary without using TOP or limit method.

select min(salary)as Second_Lowest_Salary FROM Worker
where salary > (select min(salary) from worker);

#12. Write an SQL query to fetch the list of employees with the same salary

select * from worker where salary in (select salary from worker grouped  by salary having count(*)>1 );


#13. Write an SQL query to show the second highest salary from a table

select max(salary)as SecondHighestSalary from Worker
where salary < (select max(salary) from worker);

#14. Write an SQL query to show one row twice in results from a table.

select * from worker where worker_id=1 union all 
select * from Worker where worker_id=1;

#15. Write an SQL query to fetch the first 50% records from a table.

select * from Worker limit 4;

#16. Write an SQL query to fetch the departments that have less than three people in it.

select department from worker group by department having count(*)<3;

#17. Write an SQL query to show all departments along with the number of people in there.

select distinct(department),count(*) as number_of_people from worker group by department order by count(*);


#18. Write an SQL query to fetch the last five records from a table in asc order

select * from worker order by worker_id desc limit 5;

#19. Write an SQL query to print the name of employees having the highest salary in each department

select first_name,last_name,salary,department from worker w where salary = (select max(salary) from worker where department=w.department);

#20. Write an SQL query to fetch three max salaries from a table

select distinct salary from worker order by salary desc limit 3;

#21. Write an SQL query to print the name of employees having the lowest salary in accunt and admin department

select first_name,last_name,salary,department from worker where department in ('account','admin') and salary IN (select min(salary) from worker where department in ('account','admin') Group by department );
